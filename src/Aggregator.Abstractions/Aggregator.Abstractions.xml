<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aggregator.Abstractions</name>
    </assembly>
    <members>
        <member name="T:Aggregator.ICommandHandler`1">
            <summary>
            Interface for command handlers.
            </summary>
            <typeparam name="TCommand">The type of the command this handler is able to handle.</typeparam>
        </member>
        <member name="M:Aggregator.ICommandHandler`1.Handle(`0,System.Threading.CancellationToken)">
            <summary>
            Called when a command of the given type needs to be handled.
            </summary>
            <param name="command">The command.</param>
            <param name="cancellationToken">A cancellation token that allows cancelling the process.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Aggregator.IEventHandler`1">
            <summary>
            Interface for event handlers.
            </summary>
            <typeparam name="TEvent">The type of the event this handler is able to handle.</typeparam>
        </member>
        <member name="M:Aggregator.IEventHandler`1.Handle(`0,System.Threading.CancellationToken)">
            <summary>
            Called when an event of the given type needs to be handled.
            </summary>
            <param name="event">The event.</param>
            <param name="cancellationToken">A cancellation token that allows cancelling the process.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
    </members>
</doc>
