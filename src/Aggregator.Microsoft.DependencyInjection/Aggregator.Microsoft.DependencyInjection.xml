<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aggregator.Microsoft.DependencyInjection</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Aggregator related extension methods for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddAggregator(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Extension method that registers dependencies for the Aggregator library.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddAggregator``3(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Extension method that registers dependencies for the Aggregator library.
            </summary>
            <typeparam name="TIdentifier">The identifier type.</typeparam>
            <typeparam name="TCommandBase">The command base type.</typeparam>
            <typeparam name="TEventBase">The event base type.</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="T:Aggregator.Microsoft.DependencyInjection.ServiceScope">
            <summary>
            Microsoft.Extensions.DependencyInjection implementation of <see cref="T:Aggregator.DI.IServiceScope"/>.
            </summary>
        </member>
        <member name="M:Aggregator.Microsoft.DependencyInjection.ServiceScope.Dispose">
            <summary>
            Disposes the <see cref="T:Aggregator.Microsoft.DependencyInjection.ServiceScope"/> instance.
            </summary>
        </member>
        <member name="M:Aggregator.Microsoft.DependencyInjection.ServiceScope.GetService(System.Type)">
            <summary>
            Resolves a service from the <see cref="T:Aggregator.Microsoft.DependencyInjection.ServiceScope"/>.
            </summary>
            <param name="serviceType">The type of the service to resolve.</param>
            <returns>An instance of <paramref name="serviceType"/>.</returns>
        </member>
        <member name="T:Aggregator.Microsoft.DependencyInjection.ServiceScopeFactory">
            <summary>
            Microsoft.Extensions.DependencyInjection implementation for <see cref="T:Aggregator.DI.IServiceScopeFactory"/>.
            </summary>
        </member>
        <member name="M:Aggregator.Microsoft.DependencyInjection.ServiceScopeFactory.#ctor(System.IServiceProvider)">
            <summary>
            Creates a new <see cref="T:Aggregator.Microsoft.DependencyInjection.ServiceScopeFactory"/> instance.
            </summary>
            <param name="serviceProvider">The parent service provider.</param>
        </member>
        <member name="M:Aggregator.Microsoft.DependencyInjection.ServiceScopeFactory.CreateScope">
            <summary>
            Method that creates a new <see cref="T:Aggregator.Microsoft.DependencyInjection.ServiceScope"/> from which scoped services will be resolved.
            </summary>
            <returns>A disposable <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceScope"/> instance.</returns>
        </member>
    </members>
</doc>
